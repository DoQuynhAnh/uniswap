import { InterfaceElementName, InterfaceModalName, InterfacePageName, InterfaceSectionName } from '@uniswap/analytics-events';
import { OnboardingCardLoggingName } from 'uniswap/src/features/telemetry/types';
export declare const ModalName: {
    readonly AccountBlocked: "account-blocked-modal";
    readonly AccountEdit: "account-edit-modal";
    readonly AccountEditLabel: "account-edit--label-modal";
    readonly AccountSwitcher: "account-switcher-modal";
    readonly AcrossRoutingInfo: "across-routing-info-modal";
    readonly ActionCannotBeCompletedModal: "action-cannot-be-completed-modal";
    readonly AddLiquidity: "add-liquidity";
    readonly AddPasskey: "add-passkey";
    readonly AddressClaim: "address-claim-modal";
    readonly AddressQR: "address-qr-modal";
    readonly AddWallet: "add-wallet-modal";
    readonly AppRatingModal: "app-rating-modal";
    readonly BackupReminder: "backup-reminder-modal";
    readonly BackupReminderWarning: "backup-reminder-warning-modal";
    readonly Bag: "bag-modal";
    readonly Banners: "banners-modal";
    readonly BiometricsModal: "biometrics-modal";
    readonly BlockedAccount: "blocked-account";
    readonly BlockedAddress: "blocked-address";
    readonly BridgingWarning: "bridging-warning-modal";
    readonly BuyNativeToken: "buy-native-token-modal";
    readonly CancelOrders: "cancel-orders-modal";
    readonly ChooseProfilePhoto: "choose-profile-photo-modal";
    readonly ChooseProviderModal: "choose-provider-modal";
    readonly ChooseUnitag: "choose-unitag-modal";
    readonly ClaimFee: "claim-fee-modal";
    readonly ClaimPopup: "claim-popup";
    readonly CloudBackupInfo: "cloud-backup-info-modal";
    readonly ConfirmCreatePosition: "confirm-create-position-modal";
    readonly ConnectionError: "connection-error-modal";
    readonly ConnectionsDappListModal: "connections-dapp-list-modal";
    readonly ContractAddressExplainer: "contract-address-explainer-modal";
    readonly CreatePasskey: "create-passkey-modal";
    readonly CreatePosition: "create-position-modal";
    readonly CurrencySearch: "currency-search-modal";
    readonly DappRequest: "dapp-request";
    readonly Delegate: "delegate";
    readonly DelegationMismatch: "delegation-mismatch-modal";
    readonly DeletePasskeySpeedbump: "delete-passkey-speedbump-modal";
    readonly DeletePasskey: "delete-passkey-modal";
    readonly DevFlags: "dev-flags-modal";
    readonly Dialog: "dialog-modal";
    readonly DownloadApp: "download-app-modal";
    readonly DynamicFeeTierSpeedbump: "dynamic-fee-tier-speedbump-modal";
    readonly EditLabelSettingsModal: "edit-label-settings-modal";
    readonly EditProfileSettingsModal: "edit-profile-settings-modal";
    readonly ENSClaimPeriod: "ens-claim-period";
    readonly EnterPassword: "enter-password-modal";
    readonly EstimatedTimeInfo: "estimated-time-info-modal";
    readonly ExchangeTransferModal: "exchange-transfer-modal";
    readonly Execute: "execute";
    readonly Experiments: "experiments";
    readonly Explore: "explore-modal";
    readonly ExploreProtocolFilter: "explore-pools-protocol-filter";
    readonly FaceIDWarning: "face-id-warning";
    readonly FeatureFlags: "feature-flags-modal";
    readonly FeeClaim: "fee-claim-modal";
    readonly FeeTierSearch: "fee-tier-search-modal";
    readonly FiatCurrencySelector: "fiat-currency-selector";
    readonly FiatOffRampUnsupportedTokenModal: "fiat-off-ramp-unsupported-token-modal";
    readonly FiatOnramp: "fiat-onramp-modal";
    readonly FiatOnRampAggregator: "fiat-on-ramp-aggregator";
    readonly FiatOnRampCountryList: "fiat-on-ramp-country-list";
    readonly FiatOnRampTokenSelector: "fiat-on-ramp-token-selector";
    readonly ForceUpgradeModal: "force-upgrade-modal";
    readonly ForgotPassword: "forgot-password";
    readonly FOTInfo: "fee-on-transfer";
    readonly FundWallet: "fund-wallet";
    readonly GetTheApp: "get-the-app";
    readonly HiddenNFTInfoModal: "hidden-nft-info-modal";
    readonly HiddenTokenInfoModal: "hidden-token-info-modal";
    readonly Hook: "hook";
    readonly KoreaCexTransferInfoModal: "korea-cex-transfer-info-modal";
    readonly LanguageSelector: "language-selector-modal";
    readonly Legal: "legal";
    readonly LowNativeBalanceWarning: "low-native-balance-warning";
    readonly LpIncentiveClaimModal: "lp-incentive-claim-modal";
    readonly ManageWalletsModal: "manage-wallets-modal";
    readonly MigrateLiquidity: "migrate-liquidity";
    readonly NativeBalanceInfo: "native-balance-info";
    readonly NetworkFeeInfo: "network-fee-info";
    readonly NetworkSelector: "network-selector-modal";
    readonly NewAddressWarning: "new-address-warning-modal";
    readonly NftCollection: "nft-collection";
    readonly NotFound: "not-found";
    readonly NotificationsOSSettings: "notifications-os-settings-modal";
    readonly OffchainActivity: "offchain-activity-modal";
    readonly OnDeviceRecoveryConfirmation: "on-device-recovery-confirmation";
    readonly OtpInputExpired: "otp-input-expired";
    readonly OtpScanInput: "otp-scan-input";
    readonly PasskeyManagement: "passkey-management-modal";
    readonly PasskeysHelp: "passkeys-help-modal";
    readonly PriceImpact: "price-impact-modal";
    readonly PrivacyChoices: "privacy-choices-modal";
    readonly PermissionsModal: "permissions-modal";
    readonly PortfolioBalanceModal: "portfolio-balance-modal";
    readonly PostSwapSmartWalletNudge: "post-swap-smart-wallet-nudge";
    readonly PrivacyPolicy: "privacy-policy";
    readonly PrivateKeySpeedBumpModal: "private-key-speed-bump-modal";
    readonly QRCodeNetworkInfo: "qr-code-network-info";
    readonly Queue: "queue";
    readonly QueuedOrderModal: "queued-order-modal";
    readonly ReceiveCryptoModal: "receive-crypto-modal";
    readonly RecentlyConnectedModal: "recently-connected-modal";
    readonly ReceiveCryptoQr: "receive-crypto-qr";
    readonly RecipientSelectErc20Warning: "recipient-select-erc20-warning";
    readonly RecipientSelectNewWarning: "recipient-select-new-warning";
    readonly RecipientSelectSelfSendWarning: "recipient-select-self-send-warning";
    readonly RecipientSelectSmartContractWarning: "recipient-select-smart-contract-warning";
    readonly RecipientSelectViewOnlyWarning: "recipient-select-view-only-warning";
    readonly RecoveryPhrase: "recovery-phrase-modal";
    readonly RecoverySpeedBump: "recovery-speed-bump";
    readonly RemoveLiquidity: "remove-liquidity";
    readonly RemoveSeedPhraseWarningModal: "remove-seed-phrase-warning-modal";
    readonly RemoveWallet: "remove-wallet-modal";
    readonly ResetCreatePositionsForm: "reset-create-positions-form";
    readonly RestoreWallet: "restore-wallet-modal";
    readonly Scantastic: "scantastic";
    readonly SmartWalletAdvancedSettingsModal: "smart-wallet-advanced-settings-modal";
    readonly SmartWalletConfirmModal: "smart-wallet-confirm-modal";
    readonly SmartWalletInsufficientFundsOnNetworkModal: "smart-wallet-insufficient-funds-modal";
    readonly ScreenshotWarning: "screenshot-warning";
    readonly Search: "search-modal";
    readonly SeedPhraseWarningModal: "seed-phrase-warning-modal";
    readonly Send: "send-modal";
    readonly SendReview: "send-review-modal";
    readonly SendWarning: "send-warning-modal";
    readonly Settings: "settings";
    readonly SettingsAppearance: "appearance-settings-modal";
    readonly SignIn: "sign-in-modal";
    readonly SignUp: "sign-up-modal";
    readonly SlippageInfo: "slippage-info-modal";
    readonly SlippageWarningModal: "slippage-warning-modal";
    readonly SmartWalletCreatedModal: "smart-wallet-created-modal";
    readonly SmartWalletDisableModal: "smart-wallet-disable-modal";
    readonly SmartWalletEducationalModal: "smart-wallet-educational-modal";
    readonly SmartWalletEnabledModal: "smart-wallet-enabled-modal";
    readonly SmartWalletUnavailableModal: "smart-wallet-unavailable-modal";
    readonly StorageWarning: "storage-warning-modal";
    readonly Swap: "swap-modal";
    readonly SwapError: "swap-error-modal";
    readonly SwapProtection: "swap-protection-modal";
    readonly SwapReview: "swap-review-modal";
    readonly SwapSettings: "swap-settings-modal";
    readonly SwapSettingsDefaultRoutingInfo: "swap-settings-default-routing-info-modal";
    readonly SwapWarning: "swap-warning-modal";
    readonly TestnetMode: "testnet-mode-modal";
    readonly TestnetSwitchModal: "testnet-switch-modal";
    readonly TokenSafety: "token-safety-modal";
    readonly TokenSelector: "token-selector";
    readonly TokenWarning: "token-warning";
    readonly TokenWarningModal: "token-warning-modal";
    readonly TooltipContent: "tooltip-content";
    readonly TransactionActions: "transaction-actions";
    readonly TransactionConfirmation: "transaction-confirmation-modal";
    readonly TransactionDetails: "transaction-details";
    readonly TokenNotFound: "token-not-found";
    readonly PoolNotFound: "pool-not-found";
    readonly UkDisclaimer: "uk-disclaimer-modal";
    readonly UniconsDevModal: "unicons-dev-modal";
    readonly UniconsV2: "unicons-v2-intro-modal";
    readonly UniswapXInfo: "uniswapx-info-modal";
    readonly UnitagsChange: "unitags-change-modal";
    readonly UnitagsChangeConfirm: "unitags-change-confirm-modal";
    readonly UnitagsDelete: "unitags-delete-modal";
    readonly UnitagsIntro: "unitags-intro-modal";
    readonly UniWalletConnect: "uniwallet-connect-modal";
    readonly UnsupportedCurrency: "unsupported-currency-modal";
    readonly UwULinkErc20SendModal: "uwulink-erc20-send-modal";
    readonly VerifyPasskey: "verify-passkey-modal";
    readonly V4HooksInfo: "v4-hooks-info-modal";
    readonly ViewOnlyExplainer: "view-only-explainer-modal";
    readonly ViewSeedPhraseWarning: "view-seed-phrase-warning";
    readonly Vote: "vote";
    readonly WalletConnectScan: "wallet-connect-scan-modal";
    readonly WCDappConnectedNetworks: "wc-dapp-connected-networks-modal";
    readonly WCPendingConnection: "wc-pending-connection-modal";
    readonly WCSignRequest: "wc-sign-request-modal";
    readonly WCViewOnlyWarning: "wc-view-only-warning-modal";
};
export type ModalNameType = (typeof ModalName)[keyof typeof ModalName] | InterfaceModalName;
/**
 * Possible names for the telement property in TraceContext
 */
export declare const ElementName: {
    readonly AcceptNewRate: "accept-new-rate";
    readonly AccountCard: "account-card";
    readonly AddManualBackup: "add-manual-backup";
    readonly AddViewOnlyWallet: "add-view-only-wallet";
    readonly AddCloudBackup: "add-cloud-backup";
    readonly AddHook: "add-hook";
    readonly AddPasskey: "add-passkey";
    readonly AddPasskeyCrossPlatform: "add-passkey-cross-platform";
    readonly AddPasskeyPlatform: "add-passkey-platform";
    readonly AlreadyHaveWalletSignIn: "already-have-wallet-sign-in";
    readonly BackButton: "back-button";
    readonly Buy: "buy";
    readonly BuyNativeTokenButton: "buy-native-token-button";
    readonly BridgeNativeTokenButton: "bridge-native-token-button";
    readonly Cancel: "cancel";
    readonly ChainEthereum: "chain-ethereum";
    readonly ChainUnichain: "chain-unichain";
    readonly ChainUnichainSepolia: "chain-unichain-sepolia";
    readonly ChainSepolia: "chain-sepolia";
    readonly ChainOptimism: "chain-optimism";
    readonly ChainArbitrum: "chain-arbitrum";
    readonly ChainPolygon: "chain-polygon";
    readonly ChainCelo: "chain-celo";
    readonly ChainBNB: "chain-bnb";
    readonly ChainAvalanche: "chain-avalanche";
    readonly ChainBase: "chain-base";
    readonly ChainBlast: "chain-blast";
    readonly ChainMonadTestnet: "chain-monad-testnet";
    readonly ChainSoneium: "chain-soneium";
    readonly ChainWorldChain: "chain-world-chain";
    readonly ChainZora: "chain-zora";
    readonly ChainZkSync: "chain-zksync";
    readonly ChooseInputToken: "choose-input-token";
    readonly ChooseOutputToken: "choose-output-token";
    readonly ClearPending: "clear-pending";
    readonly Confirm: "confirm";
    readonly ConnectExistingWallet: "connect-existing-wallet";
    readonly Continue: "continue";
    readonly Copy: "copy";
    readonly CopyAddress: "copy-address";
    readonly CreateAccount: "create-account";
    readonly CreateAWallet: "create-a-wallet";
    readonly CreatePasskey: "create-passkey";
    readonly DeletePasskey: "delete-passkey";
    readonly DeletePasskeyAcknowledge: "delete-passkey-acknowledge";
    readonly Disconnect: "disconnect";
    readonly EmptyStateBuy: "empty-state-buy";
    readonly EmptyStateImport: "empty-state-get-import";
    readonly EmptyStateReceive: "empty-state-receive";
    readonly EmptyStateCEXTransfer: "empty-state-cex-transfer";
    readonly Enable: "enable";
    readonly EtherscanView: "etherscan-view";
    readonly ExtensionPopupOpenButton: "extension-popup-open-button";
    readonly FiatOnRampTokenSelector: "fiat-on-ramp-token-selector";
    readonly FiatOnRampWidgetButton: "fiat-on-ramp-widget-button";
    readonly FiatOnRampCountryPicker: "fiat-on-ramp-country-picker";
    readonly GetHelp: "get-help";
    readonly GetTheApp: "get-the-app";
    readonly ImportAccount: "import-account";
    readonly InlineWarningCardCheckbox: "inline-warning-card-checkbox";
    readonly LimitOrderButton: "limit-order-button";
    readonly MaybeLaterButton: "maybe-later-button";
    readonly MoonpayExplorerView: "moonpay-explorer-view";
    readonly NetworkButton: "network-button";
    readonly Next: "next";
    readonly NftItem: "nft-item";
    readonly OK: "ok";
    readonly OnboardingIntroCardFundWallet: "onboarding-intro-card-fund-wallet";
    readonly OnboardingIntroCardEnablePushNotifications: "onboarding-intro-card-enable-push-notifications";
    readonly OnboardingImportBackup: "onboarding-import-backup";
    readonly OnboardingImportSeedPhrase: "onboarding-import-seed-phrase";
    readonly OnboardingImportViewPrivateKeys: "onboarding-import-view-private-keys";
    readonly OnboardingPasskey: "onboarding-passkey";
    readonly OnDeviceRecoveryImportOther: "on-device-recovery-import-other";
    readonly OnDeviceRecoveryWallet: "on-device-recovery-wallet";
    readonly OnDeviceRecoveryModalCancel: "on-device-recovery-modal-cancel";
    readonly OnDeviceRecoveryModalConfirm: "on-device-recovery-modal-confirm";
    readonly OpenCameraRoll: "open-camera-roll";
    readonly OpenNftsList: "open-nfts-list";
    readonly PreselectAsset: "preselect-asset";
    readonly PresetPercentage: "preset-percentage";
    readonly QRCodeModalToggle: "qr-code-modal-toggle";
    readonly Receive: "receive";
    readonly RecoveryHelpButton: "recovery-help-button";
    readonly Remove: "remove";
    readonly RestoreFromCloud: "restore-from-cloud";
    readonly Sell: "sell";
    readonly Send: "send";
    readonly SetPercentageInput: "set-percentage-input";
    readonly SetPercentageOutput: "set-percentage-output";
    readonly SignIn: "sign-in";
    readonly Skip: "skip";
    readonly Swap: "swap";
    readonly SwapFormHeader: "swap-form-header";
    readonly SwapReview: "swap-review";
    readonly SendReview: "send-review";
    readonly SwapRoutingPreferenceDefault: "swap-routing-preference-default";
    readonly SwapRoutingPreferenceUniswapX: "swap-routing-preference-UniswapX";
    readonly SwapRoutingPreferenceV2: "swap-routing-preference-v2";
    readonly SwapRoutingPreferenceV3: "swap-routing-preference-v3";
    readonly SwapRoutingPreferenceV4: "swap-routing-preference-v4";
    readonly SwapRoutingPreferenceV4Hooks: "swap-routing-preference-v4-hooks";
    readonly SwitchCurrenciesButton: "switch-currencies-button";
    readonly TDPActionMenuButton: "tdp-action-menu-button";
    readonly TimeFrame1H: "time-frame-1H";
    readonly TimeFrame1D: "time-frame-1D";
    readonly TimeFrame1W: "time-frame-1W";
    readonly TimeFrame1M: "time-frame-1M";
    readonly TimeFrame1Y: "time-frame-1Y";
    readonly TimeFrameAll: "time-frame-All";
    readonly TokenAddress: "token-address";
    readonly TokenInputSelector: "token-input-selector";
    readonly TokenItem: "token-item";
    readonly TokenLinkEtherscan: "token-link-etherscan";
    readonly TokenLinkTwitter: "token-link-twitter";
    readonly TokenLinkWebsite: "token-link-website";
    readonly TokenOutputSelector: "token-output-selector";
    readonly TokenWarningCard: "token-warning-card";
    readonly Unwrap: "unwrap";
    readonly WalletCard: "wallet-card";
    readonly WalletConnectScan: "wallet-connect-scan";
    readonly WalletQRCode: "wallet-qr-code";
    readonly Wrap: "wrap";
};
export type ElementNameType = (typeof ElementName)[keyof typeof ElementName] | InterfaceElementName | OnboardingCardLoggingName;
/**
 * Possible names for the section property in TraceContext
 */
export declare const SectionName: {
    readonly CurrencyInputPanel: "currency-input-panel";
    readonly CurrencyOutputPanel: "currency-output-panel";
    readonly ExploreFavoriteTokensSection: "explore-favorite-tokens-section";
    readonly ExploreSearch: "explore-search";
    readonly ExploreTopTokensSection: "explore-top-tokens-section";
    readonly HomeActivityTab: "home-activity-tab";
    readonly HomeExploreTab: "home-explore-tab";
    readonly HomeNFTsTab: "home-nfts-tab";
    readonly HomeTokensTab: "home-tokens-tab";
    readonly ImportAccountForm: "import-account-form";
    readonly ProfileActivityTab: "profile-activity-tab";
    readonly ProfileNftsTab: "profile-nfts-tab";
    readonly ProfileTokensTab: "profile-tokens-tab";
    readonly SwapForm: "swap-form";
    readonly SwapPending: "swap-pending";
    readonly SwapReview: "swap-review";
    readonly TokenSelector: "token-selector";
    readonly TokenDetails: "token-details";
    readonly SendForm: "transfer-form";
    readonly SendReview: "transfer-review";
    readonly SendRecipientSelectFullScreen: "send-recipient-select";
    readonly ChainSelector: "chain-selector";
    readonly CreatePositionDepositStep: "create-position-deposit-step";
    readonly CreatePositionPriceRangeStep: "create-position-price-range-step";
    readonly CreatePositionSelectTokensStep: "create-position-select-tokens-step";
};
export type SectionNameType = (typeof SectionName)[keyof typeof SectionName] | InterfaceSectionName;
export declare const InterfacePageNameLocal: {
    Send: string;
    Limit: string;
    Buy: string;
    Positions: string;
    PositionDetails: string;
    CreatePosition: string;
    MigrateV2: string;
    MigrateV2Pair: string;
    MigrateV3: string;
};
export type InterfacePageNameType = (typeof InterfacePageNameLocal)[keyof typeof InterfacePageNameLocal] | InterfacePageName;
//# sourceMappingURL=trace.d.ts.map