/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory, } from "ethers";
const _abi = [
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "v2Factory",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "v3Factory",
                        type: "address",
                    },
                    {
                        internalType: "bytes32",
                        name: "pairInitCodeHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "poolInitCodeHash",
                        type: "bytes32",
                    },
                ],
                internalType: "struct UniswapParameters",
                name: "params",
                type: "tuple",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
];
const _bytecode = "0x610100604052346100f157604051601f61011a38819003918201601f19168301916001600160401b038311848410176100dd578084926080946040528339810103126100f15760405190608082016001600160401b038111838210176100dd5760405261006b816100f5565b9081835261007b602082016100f5565b60208401908152604082810151818601908152606093840151939095019283526001600160a01b03938416608052935160a0525190911660c0525160e052516010908161010a823960805181505060a05181505060c05181505060e051815050f35b634e487b7160e01b5f52604160045260245ffd5b5f80fd5b51906001600160a01b03821682036100f15756fe5f80fdfea164736f6c634300081a000a";
export class UniswapImmutables__factory extends ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(params, overrides) {
        return super.deploy(params, overrides || {});
    }
    getDeployTransaction(params, overrides) {
        return super.getDeployTransaction(params, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
UniswapImmutables__factory.bytecode = _bytecode;
UniswapImmutables__factory.abi = _abi;
//# sourceMappingURL=UniswapImmutables__factory.js.map